<html lang="en-US">
<head>
    <meta charset="utf-8" />
    <title>SqlServerSpatial.Toolkit</title>
    <style>
        body {
            background: #fff;
            color: #505050;
            margin: 20px;
        }

        #main {
            background: #efefef;
            padding: 5px 30px;
        }
    </style>
</head>
<body>
    <div id="main">
        <h1>SqlServerSpatial.Toolkit</h1>
        <h2>Using the SpatialTrace</h2>
        <p>
            To use the SpatialTrace, follow the instructions on the main <a href="https://github.com/xfischer/SqlServerSpatial.Toolkit">GitHub project page</a>. Syntax should be like this:
            <pre>    SpatialTrace.Enable(); // Enables the trace
    SpatialTrace.TraceGeometry(geometry, "Sample geometry with default style");</pre>
            A SpatialTrace.txt file will be written in the executing assembly directory. This files comes with a directory "SpatialTraceData" which contains all traced geometries serialized.
            <br/>You can either call:<pre>SpatialTrace.ShowDialog();</pre> or open the file in the SpatialTrace Viewer application.
        </p>
        <h2>Using the SpatialTrace Viewer application</h2>
        <p>
            The SpatialTrace Viewer (SqlServerSpatial.Toolkit.Viewer.exe) is added in project directory named SqlServerSpatial.Toolkit. It is physically under packages directory.
        </p>
        <h2>Install debugger visualizer</h2>
        <p>
            [Visual Studio 2013 and 2015 only. Support for VS2012 is coming]
        </p>
        <p>[Automated install is still a work in progress.]</p>
        <p>
            To install the debugger visualizer, copy the following files from your project output dir (bin\Debug):<br/>
            <ul>
                <li>SqlServerSpatial.Toolkit.DebuggerVisualizer.VS2013.dll or VS2015 for vs2015</li>
                <li>SqlServerSpatial.Toolkit.dll</li>
                <li>Microsoft.SqlServer.Types.dll</li>
                <li>SqlServerTypes directory</li>
            </ul>
            </p>
        <p>to either of the following locations:
        <ul>
            <li>%VS120COMNTOOLS%\Common7\Packages\Debugger\Visualizers, for all users (or VS140COMNTOOLS for vs2015)</li>
            <li>%USERPROFILE%\Documents\Visual Studio 2013\Visualizers, for you only (or 2015 for vs2015)</li>
        </ul>
           
        </p>
        <p>More information here [on MSDN](https://msdn.microsoft.com/en-us/library/sb2yca43.aspx).
        </p>
        <h2>Issues, remarks, questions</h2>
        <p>If you have any comment, issue or question, please post it in the GitHub repo.</p>
        <h1>Microsoft.SqlServer.Types (official readme)</h3>
        <h2>Action required to load native assemblies</h2>
        <p>
            To deploy an application that uses spatial data types to a machine that does not have 'System CLR Types for SQL Server' installed you also need to deploy the native assembly SqlServerSpatial110.dll. Both x86 (32 bit) and x64 (64 bit) versions of this assembly have been added to your project under the SqlServerTypes\x86 and SqlServerTypes\x64 subdirectories. The native assembly msvcr100.dll is also included in case the C++ runtime is not installed.
        </p>
        <p>
            You need to add code to load the correct one of these assemblies at runtime (depending on the current architecture).
        </p>
        <h3>ASP.NET applications</h3>
        <p>
            For ASP.NET applications, add the following line of code to the Application_Start method in Global.asax.cs:
            <pre>    SqlServerTypes.Utilities.LoadNativeAssemblies(Server.MapPath("~/bin"));</pre>
        </p>
        <h3>Desktop applications</h3>
        <p>
            For desktop applications, add the following line of code to run before any spatial operations are performed:
            <pre>    SqlServerTypes.Utilities.LoadNativeAssemblies(AppDomain.CurrentDomain.BaseDirectory);</pre>
        </p>
    </div>
</body>
</html>